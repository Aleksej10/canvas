{"version":3,"sources":["Game.js","index.js"],"names":["numToCard","n","value","text","suit","Math","floor","color","getShuffled","a","Array","keys","i","length","j","random","TurnedCard","props","p","className","style","LastTurned","cName","outcome","Deck","onClick","Cards","cards","index","turnedCards","push","key","high","Bets","reset","bet","incBet","decBet","total","Game","this","console","log","previous","current","pCard","cCard","setGlow","setTimeout","updateBank","deckClick","React","Component","connect","state","dispatch","type","persistConfig","storage","persistedReducer","persistReducer","action","inc","store","createStore","persistor","persistStore","subscribe","render","loading","document","getElementById"],"mappings":"yRAIA,SAASA,EAAUC,GAUjB,MANa,CACXC,MAAOD,EACPE,KALa,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAKlDF,EAAE,IACfG,KALY,CAAC,SAAK,SAAK,SAAI,UAKfC,KAAKC,MAAML,EAAE,KACzBM,MALY,CAAC,MAAO,QAAS,MAAO,SAKvBF,KAAKC,MAAML,EAAE,MAKvB,SAASO,IAEd,IADA,IAAIC,EAAC,YAAOC,MAAM,IAAIC,QACbC,EAAIH,EAAEI,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACnC,IAAME,EAAIT,KAAKC,MAAMD,KAAKU,UAAYH,EAAI,IADP,EAEpB,CAACH,EAAEK,GAAIL,EAAEG,IAAvBH,EAAEG,GAFgC,KAE5BH,EAAEK,GAF0B,KAIvC,OAAOL,EAGT,SAASO,EAAWC,GAClB,IAAMC,EAAIlB,EAAUiB,EAAMf,OAC1B,OACE,yBAAKiB,UAAU,SACb,uBAAGA,UAAU,SAASC,MAAO,CAAEb,MAAOW,EAAEX,QAAxC,IAAoDW,EAAEf,KAAtD,KACA,uBAAGgB,UAAU,SAASC,MAAO,CAAEb,MAAOW,EAAEX,QAAxC,IAAoDW,EAAEd,KAAtD,MAKN,SAASiB,EAAWJ,GAClB,IAAMC,EAAIlB,EAAUiB,EAAMf,OACpBoB,EAAQ,SAAWL,EAAMM,QAC/B,OACE,yBAAKJ,UAAWG,GACd,yBAAKH,UAAU,YACb,uBAAGA,UAAU,SAASC,MAAO,CAAEb,MAAOW,EAAEX,QAAxC,IAAoDW,EAAEf,KAAtD,KACA,uBAAGgB,UAAU,SAASC,MAAO,CAAEb,MAAOW,EAAEX,QAAxC,IAAoDW,EAAEd,KAAtD,MAEF,yBAAKe,UAAU,uBACb,uBAAGA,UAAU,SAASC,MAAO,CAAEb,MAAOW,EAAEX,QAAxC,IAAoDW,EAAEd,KAAtD,KACA,uBAAGe,UAAU,SAASC,MAAO,CAAEb,MAAOW,EAAEX,QAAxC,IAAoDW,EAAEf,KAAtD,OAMR,SAASqB,EAAKP,GACZ,OACE,yBAAKE,UAAU,QACb,yBAAKA,UAAU,MAAMM,QAAS,kBAAIR,EAAMQ,SAAQ,KAAhD,IAAwD,uBAAGN,UAAU,SAAb,gBAAxD,KACA,yBAAKA,UAAU,MAAMM,QAAS,kBAAIR,EAAMQ,SAAQ,KAAhD,IAAyD,uBAAGN,UAAU,SAAb,gBAAzD,MAKN,SAASO,EAAMT,GAIb,IAHA,IAAMU,EAAQV,EAAMU,MACdC,EAAQX,EAAMW,MAChBC,EAAc,GACVjB,EAAI,EAAGA,EAAEgB,EAAOhB,IACtBiB,EAAYC,KAAK,kBAACd,EAAD,CAAYe,IAAOnB,EAAGV,MAASyB,EAAMf,MAGxD,OACE,yBAAKO,UAAU,SACb,kBAACK,EAAD,CACEC,QAAS,SAACO,GAAD,OAAQf,EAAMQ,QAAQO,MAE/BH,EACF,kBAACR,EAAD,CACEnB,MAAUyB,EAAMC,GAChBL,QAAYN,EAAMM,WAM1B,SAASU,EAAKhB,GACZ,OACE,yBAAKE,UAAU,QACb,yBAAKA,UAAU,MAAMM,QAAS,kBAAIR,EAAMiB,UACtC,uBAAGf,UAAU,SAAb,YAEF,yBAAKA,UAAU,QACb,uBAAGA,UAAU,SAAb,SAA6BF,EAAMkB,IAAnC,KACA,yBAAKhB,UAAU,MAAMM,QAAS,kBAAIR,EAAMmB,WAAxC,IAAmD,uBAAGjB,UAAU,SAAb,QACnD,yBAAKA,UAAU,MAAMM,QAAS,kBAAIR,EAAMoB,WAAxC,IAAmD,uBAAGlB,UAAU,SAAb,SAErD,yBAAKA,UAAU,QACb,uBAAGA,UAAU,SAAb,WAA+BF,EAAMqB,MAArC,mB,IAMFC,E,wKACMP,GAAM,IAAD,OACb,GAAGQ,KAAKvB,MAAMW,OAAS,GACrBa,QAAQC,IAAI,oBADd,CAIA,IAAiBC,EAAUC,EACrBC,EAAQL,KAAKvB,MAAMU,MAAMa,KAAKvB,MAAMW,OAAS,GAC7CkB,EAAQN,KAAKvB,MAAMU,MAAMa,KAAKvB,MAAMW,MAAM,GAAK,GAE/CL,GAJqBqB,EAIIE,MAJdH,EAIOE,IAJwCD,EAAUD,IAAcX,EAKxFQ,KAAKvB,MAAM8B,QAAQxB,GACnByB,YAAW,WAAK,EAAK/B,MAAMgC,WAAW1B,KAAWA,EAAU,EAAI,Q,+BAGxD,IAAD,OACN,OACE,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,QACb,kBAACO,EAAD,CACEE,MAAUY,KAAKvB,MAAMW,MACrBD,MAAUa,KAAKvB,MAAMU,MACrBJ,QAAYiB,KAAKvB,MAAMM,QACvBE,QAAU,SAACO,GAAD,OAAU,EAAKkB,UAAUlB,MAErC,kBAACC,EAAD,CACEE,IAAQK,KAAKvB,MAAMkB,IACnBG,MAAUE,KAAKvB,MAAMqB,MACrBF,OAAW,kBAAM,EAAKnB,MAAMmB,UAC5BC,OAAW,kBAAM,EAAKpB,MAAMoB,UAC5BH,MAAU,kBAAM,EAAKjB,MAAMiB,iB,GA9BpBiB,IAAMC,WAiFVC,eA1CS,SAACC,GACvB,MAAO,CACL1B,MAAO0B,EAAM1B,MACbD,MAAO2B,EAAM3B,MACbQ,IAAKmB,EAAMnB,IACXG,MAAOgB,EAAMhB,MACbf,QAAS+B,EAAM/B,YAIQ,SAACgC,GAC1B,MAAO,CACLrB,MAAO,WACLqB,EAAS,CACPC,KAAM,WAGVnB,OAAQ,WACNkB,EAAS,CACPC,KAAM,YAGVpB,OAAQ,WACNmB,EAAS,CACPC,KAAM,YAGVT,QAAS,SAACxB,GACRgC,EAAS,CACPC,KAAM,UACNjC,QAASA,KAGb0B,WAAY,SAAC1B,GACXgC,EAAS,CACPC,KAAM,aACNjC,QAASA,QAMF8B,CAA6Cd,G,QC/FtDkB,EAAgB,CACpB1B,IAAK,OACL2B,aAGIC,EAAmBC,YAAeH,GAnFxB,WAOC,IAPAH,EAOD,uDANd,CACE1B,MAAO,EACPD,MAAOnB,IACP2B,IAAK,GACLG,MAAO,GACPf,QAAS,IACRsC,EAAW,uCACd,OAAOA,EAAOL,MACZ,IAAK,QACHF,EAAK,2BACAA,GADA,IAEH1B,MAAO,EACPD,MAAOnB,IACP2B,IAAK,GACLG,MAAO,GACPf,QAAS,KAEX,MACF,IAAK,SACH,GAAG+B,EAAMnB,KAAO,GAAI,MACpBmB,EAAK,2BACAA,GADA,IAEHnB,IAAKmB,EAAMnB,IAAM,EACjBG,MAAOgB,EAAMhB,MAAQ,IAEvB,MACF,IAAK,SACH,IAAMwB,EAAMR,EAAMhB,MAAQ,EAAIgB,EAAMhB,MAAQ,EAC5CgB,EAAK,2BACAA,GADA,IAEHnB,IAAKmB,EAAMnB,IAAM2B,EACjBxB,MAAOgB,EAAMhB,MAAQwB,IAEvB,MACF,IAAK,UACHR,EAAK,2BACAA,GADA,IAEH1B,MAAO0B,EAAM1B,MAAQ,EACrBL,QAASsC,EAAOtC,QAAU,aAAe,aAE3C,MACF,IAAK,aACH,GAAGsC,EAAOtC,QACR+B,EAAK,2BACAA,GADA,IAEHhB,MAAOgB,EAAMhB,MAAQgB,EAAMnB,UAG3B,CACF,IAAIA,EAAMmB,EAAMnB,IACZG,EAAQgB,EAAMhB,MACfA,GAAS,EAAEH,EACZG,GAASH,EAEHG,EAAQ,IACdG,QAAQC,IAAI,qBACZP,EAAM,IAGNG,GAAS,GACTH,EAAM,IAERmB,EAAK,2BACAA,GADA,IAEH1B,MAAO,EACPD,MAAOnB,IACPe,QAAS,GACTY,IAAKA,EACLG,MAAOA,KAMf,OAAOgB,KAULS,EAAQC,YAAYL,GACpBM,EAAYC,YAAaH,GAE7BA,EAAMI,WAAU,eAGhBC,iBACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,IAAD,CAAaM,QAAS,KAAMJ,UAAWA,GACrC,kBAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.e847df51.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport './index.css';\n\nfunction numToCard(n){\n  const values = ['2','3','4','5','6','7','8','9','10','J','Q','K','A'];\n  const suits = ['❤', '♠', '♦','♣'];\n  const color = ['red', 'black', 'red', 'black'];\n  const card = {\n    value: n,\n    text: values[n%13],\n    suit: suits[Math.floor(n/13)],\n    color: color[Math.floor(n/13)],\n  };\n  return card;\n}\n\nexport function getShuffled(){\n  var a = [...Array(52).keys()];\n  for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nfunction TurnedCard(props){\n  const p = numToCard(props.value);\n  return (\n    <div className='tcard'>\n      <p className='card-p' style={{ color: p.color }}> { p.text } </p>\n      <p className='card-p' style={{ color: p.color }}> { p.suit } </p>\n    </div>\n  );\n}\n\nfunction LastTurned(props){\n  const p = numToCard(props.value);\n  const cName = 'lcard ' + props.outcome;\n  return (\n    <div className={cName}>\n      <div className='pipValue'>\n        <p className='card-p' style={{ color: p.color }}> { p.text } </p>\n        <p className='card-p' style={{ color: p.color }}> { p.suit } </p>\n      </div>\n      <div className='pipValue upSideDown'>\n        <p className='card-p' style={{ color: p.color }}> { p.suit } </p>\n        <p className='card-p' style={{ color: p.color }}> { p.text } </p>\n      </div>\n    </div>\n  );\n}\n\nfunction Deck(props){\n  return(\n    <div className='deck'>\n      <div className='bet' onClick={()=>props.onClick(true)}> <p className='bet-p'>👆</p> </div>\n      <div className='bet' onClick={()=>props.onClick(false)}> <p className='bet-p'>👇</p> </div>\n    </div>\n  );\n}\n\nfunction Cards(props){\n  const cards = props.cards;\n  const index = props.index;\n  var turnedCards = [];\n  for(let i = 0; i<index; i++){\n    turnedCards.push(<TurnedCard key = {i} value= { cards[i] } />);\n  }\n\n  return (\n    <div className='cards'>\n      <Deck \n        onClick={(high)=>props.onClick(high)}\n      />\n      { turnedCards }\n      <LastTurned \n        value = { cards[index] } \n        outcome = { props.outcome }\n      />\n    </div>\n  );\n}\n\nfunction Bets(props){\n  return (\n    <div className='bets'>\n      <div className='btn' onClick={()=>props.reset()}>\n        <p className='bet-p'> reset </p>\n      </div>\n      <div className='hbox'>\n        <p className='bet-p'> bet: { props.bet } </p>\n        <div className='btn' onClick={()=>props.incBet()}> <p className='bet-p'> + </p></div>\n        <div className='btn' onClick={()=>props.decBet()}> <p className='bet-p'> - </p></div>\n      </div>\n      <div className='hbox'>\n        <p className='bet-p'> total: { props.total } 💰</p>\n      </div>\n    </div>\n  );\n}\n\nclass Game extends React.Component {\n  deckClick(high){\n    if(this.props.index >= 51){\n      console.log('deck is empy');\n      return;\n    }\n    const decider = (previous, current) => current !== previous && (current > previous) === high;\n    const pCard = this.props.cards[this.props.index] % 13;\n    const cCard = this.props.cards[this.props.index+1] % 13;\n\n    const outcome = decider(pCard, cCard);\n    this.props.setGlow(outcome);\n    setTimeout(()=>{this.props.updateBank(outcome)}, outcome ? 0 : 2000);\n  }\n\n  render(){\n    return (\n      <div className='game'>\n        <div className='vbox'>\n          <Cards \n            index = { this.props.index }\n            cards = { this.props.cards }\n            outcome = { this.props.outcome }\n            onClick={ (high) => this.deckClick(high) }\n          />\n          <Bets \n            bet = { this.props.bet }\n            total = { this.props.total }\n            incBet = { () => this.props.incBet() }\n            decBet = { () => this.props.decBet() }\n            reset = { () => this.props.reset() }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    index: state.index,\n    cards: state.cards,\n    bet: state.bet,\n    total: state.total,\n    outcome: state.outcome,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    reset: () => {\n      dispatch({\n        type: 'reset',\n      });\n    },\n    decBet: () => {\n      dispatch({\n        type: 'decBet',\n      });\n    },\n    incBet: () => {\n      dispatch({\n        type: 'incBet',\n      });\n    },\n    setGlow: (outcome) => {\n      dispatch({\n        type: 'setGlow',\n        outcome: outcome,\n      });\n    },\n    updateBank: (outcome) => {\n      dispatch({\n        type: 'updateBank',\n        outcome: outcome,\n      });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React from 'react';\nimport {render} from 'react-dom';\nimport {createStore} from 'redux';\nimport {persistStore, persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport {Provider} from 'react-redux';\nimport Game from './Game';\nimport { getShuffled } from './Game';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nconst reducer = (state = \n  {\n    index: 0,\n    cards: getShuffled(),\n    bet: 10,\n    total: 90,\n    outcome: '',\n  }, action) => {\n  switch(action.type){\n    case 'reset':\n      state = {\n        ...state,\n        index: 0,\n        cards: getShuffled(),\n        bet: 10,\n        total: 90,\n        outcome: '',\n      };\n      break;\n    case 'decBet':\n      if(state.bet <= 10) break;\n      state = {\n        ...state,\n        bet: state.bet + 5,\n        total: state.total - 5,\n      }; \n      break;\n    case 'incBet':\n      const inc = state.total < 5 ? state.total : 5;\n      state = {\n        ...state,\n        bet: state.bet + inc,\n        total: state.total - inc,\n      }; \n      break;\n    case 'setGlow':\n      state = {\n        ...state,\n        index: state.index + 1,\n        outcome: action.outcome ? 'green-glow' : 'red-glow',\n      }; \n      break;\n    case 'updateBank':\n      if(action.outcome){\n        state = {\n          ...state,\n          total: state.total + state.bet,\n        }; \n      }\n      else{\n        var bet = state.bet;\n        var total = state.total;\n        if(total >= 2*bet){\n          total -= bet;\n        }\n        else if(total < 10){\n          console.log('minimum bet is 10');\n          bet = 0;\n        }\n        else{\n          total -= 10;\n          bet = 10;\n        }\n        state = {\n          ...state,\n          index: 0,\n          cards: getShuffled(),\n          outcome: '',\n          bet: bet,\n          total: total,\n        }; \n      }\n      break;\n    default: ;\n  }\n  return state;\n};\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nlet store = createStore(persistedReducer);\nlet persistor = persistStore(store);\n\nstore.subscribe(()=>{});\n\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Game />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}